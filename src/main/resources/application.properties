#tomcat configed  on server.port=8081

server.port=8181
logging.level.org.springframework.web=DEBUG

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/cleanu
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.max-active=10
spring.datasource.max-wait=10000


# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

#if this is the first time flyway has ever been run ,go ahead n run migrahtion
#flyway.baseline-on-migrate=true
# shut hibernate from doing similar thing
spring.jpa.hibernate.ddl-auto=false



#2nd data source

datasource.flyway.url = jdbc:mysql://localhost:3306/cleanu
datasource.flyway.username = root
datasource.flyway.password = root
datasource.flyway.driverClassName=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
datasource.flyway.testWhileIdle = true
datasource.flyway.validationQuery = SELECT 1
datasource.flyway.max-active=10
datasource.flyway.max-wait=10000

